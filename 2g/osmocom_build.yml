---
- name: Build and install Osmocom modules
  hosts: localhost
  become: true
  vars:
    install_path: "{{ install_path }}"
    install_user: "{{ install_user }}"
    debug_mode: false  # true для включения режима отладки
    osmocom_libs:
      - "libosmo-netif"
      - "libosmocore"
      - "libosmo-abis"
      - "libosmo-sccp"
      - "libosmo-sigtran"
      - "libosmo-gprs"
    osmocom_components:
      - "libsmpp34"
      - "osmo-mgw"
      - "libasn1c"
      - "osmo-iuh"
      - "osmo-hlr"
      - "osmo-msc"
      - "osmo-ggsn"
      - "osmo-sgsn"
      - "osmo-bsc"
      # - "osmo-bts" # Отделной задачей
  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: yes

    - name: Install required packages
      apt:
        name:
          - python3
          - build-essential
          - libtool
          - libtalloc-dev
          - libsctp-dev
          - shtool
          - autoconf
          - automake
          - git-core
          - pkg-config
          - make
          - gcc
          - gnutls-dev
          - libmnl-dev
          - libpcsclite-dev
          - libortp-dev
          - dahdi-source
          - libsqlite3-dev
          - libc-ares-dev
          - libgnutls28-dev
          - xterm
          - xfonts-base
          - libc6-dev
          - gcc-arm-none-eabi
        state: present

    - name: Install libusb-1.0.0-dev via apt-get
      command: sudo apt-get install -y libusb-1.0.0-dev
      become: true

    - name: Install liburing-dev
      command: sudo apt-get install -y liburing-dev
      become: true

    - name: Install libosmo-netif-dev
      command: sudo apt-get install -y libosmo-netif-dev
      become: true

    - name: Add Ettus Research PPA for UHD
      apt_repository:
        repo: "ppa:ettusresearch/uhd"
        state: present

    - name: Install UHD packages
      apt:
        name:
          - libuhd-dev
          - uhd-host
        state: present

    - name: Download UHD images
      command: uhd_images_downloader

    - name: Create install directory
      file:
        path: "{{ install_path }}"
        state: directory
        owner: "{{ install_user }}"
        group: "{{ install_user }}"

    - name: Clone Osmocom libraries
      git:
        repo: "https://gitea.osmocom.org/osmocom/{{ item }}.git"
        dest: "{{ install_path }}/{{ item }}"
      loop: "{{ osmocom_libs }}"
      loop_control:
        label: "{{ item }}"

    - name: Clone Osmocom components
      git:
        repo: "https://gitea.osmocom.org/cellular-infrastructure/{{ item }}.git"
        dest: "{{ install_path }}/{{ item }}"
      loop: "{{ osmocom_components }}"
      loop_control:
        label: "{{ item }}"

    - name: Compile and install Osmocom libraries
      shell: |
        cd {{ install_path }}/{{ item }}
        autoreconf -fi
        ./configure CFLAGS="{{ '-g' if debug_mode else '' }}"
        sudo make -j$(nproc)
        sudo make install
      loop: "{{ osmocom_libs }}"
      loop_control:
        label: "Building {{ item }}"

    - name: Update shared libraries cache
      command: ldconfig

    - name: Compile and install Osmocom components
      shell: |
        cd {{ install_path }}/{{ item }}
        autoreconf -fi
        ./configure CFLAGS="{{ '-g' if debug_mode else '' }}"
        sudo make -j$(nproc)
        sudo make install
      loop: "{{ osmocom_components }}"
      loop_control:
        label: "Building {{ item }}"

    - name: Update shared libraries cache
      command: ldconfig

    - name: Clone osmo-bts
      git: 
        repo: "https://gitea.osmocom.org/cellular-infrastructure/osmo-bts.git"
        dest: "{{ install_path }}/osmo-bts"
        clone: yes
      register: osmo_trx_cloned

    - name: Compile, and install osmo-bts

      shell: |
        cd {{ install_path }}/osmo-bts
        autoreconf -fi
        ./configure --enable-trx CFLAGS="{{ '-g' if debug_mode else '' }}"
        sudo make -j$(nproc)
        sudo make install

    - name: Clone osmo-trx repository
      git:
        repo: "https://gitea.osmocom.org/cellular-infrastructure/osmo-trx.git"
        dest: "{{ install_path }}/osmo-trx"
        clone: yes
      register: osmo_trx_cloned

    - name: Compile, and install osmo-trx
      shell: |
        cd {{ install_path }}/osmo-trx
        sudo autoreconf -fi
        sudo ./configure --with-uhd 
        sudo make -j$(nproc)
        sudo make install

    - name: Clone and build osmocom-bb
      git:
        repo: "https://gitea.osmocom.org/phone-side/osmocom-bb.git"
        dest: "{{ install_path }}/osmocom-bb"
        clone: yes
      register: osmocom_bb_cloned

    - name: Clone, compile, and install osmocom-bb
      shell: |
        cd {{ install_path }}/osmocom-bb/src
        sudo make nofirmware

    - name: Update shared libraries cache
      command: ldconfig

